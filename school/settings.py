"""
Django settings for school project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e%5st7mlk%7w88vqq%q3kgq&4)=82l**ui62yroaa9dro_y7n3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

DATA_UPLOAD_MAX_MEMORY_SIZE=52428800

# ALLOWED_HOSTS = ['66.181.175.235', '127.0.0.1', 'localhost', '192.168.0.105', '192.168.0.106', '192.168.0.113', '192.168.0.100']
ALLOWED_HOSTS = ['tenger.pro']

# Application definition
# python -m pip install graphene-django
# python -m pip install djangorestframework
# python -m pip install markdown
# python -m pip install django-filter  
# python -m pip install django-graphql-auth
# python -m pip install django-cors-headers
# python -m pip install django-mptt
# python -m pip install psycopg2
# python -m pip install graphene-file-upload
# python -m pip install --upgrade Pillow
# python -m pip install wheel
# python -m pip install pandas
# python -m pip install requests

ACCOUNT_EMAIL_VERIFICATION = False

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphene_django',
    'django_filters',
    'graphql_auth',
    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',
    'corsheaders',
    'rest_framework',
    'account',
    'tenants',
    'apps.classes',
    'apps.core',
    'apps.diplom',
    'apps.event',
    'apps.employee',
    # 'apps.employee_attendance',
#    'apps.library',
    'apps.support',
    'apps.live',
    'apps.mark',
    'apps.menu',
    'apps.online_lesson',
    'apps.online_test',
    'apps.parent',
    'apps.payment',
    'apps.program',
#    'apps.report',
    'apps.routine',
    'apps.school',
    'apps.schoolyear',
    'apps.section',
    'apps.student',
    'apps.sub_school',
    'apps.subject',
    'apps.teacher',
    'apps.plan',
    'apps.conversation'
]

AUTH_USER_MODEL = 'account.CustomUser'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
#    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "tenants.middlewares.TenantMiddleware",
    
]

ROOT_URLCONF = 'school.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'school.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "tenger",
        "USER": "postgres",
        "PASSWORD": "password",
        "HOST": "localhost",
        "PORT": "5432",
    },
}

DATABASE_ROUTERS = ["tenants.router.TenantRouter"]



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
# Add these new lines
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True # If this is used then `CORS_ALLOWED_ORIGINS` will not have any effect
CORS_ALLOW_CREDENTIALS = False
CORS_ALLOWED_ORIGINS = [
] # If this is used, then not need to use `CORS_ALLOW_ALL_ORIGINS = True`
CORS_ALLOWED_ORIGIN_REGEXES = [
]

GRAPHENE = {
    'SCHEMA': 'school.schema.schema', # this file doesn't exist yet
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],
}

AUTHENTICATION_BACKENDS = [
    "graphql_auth.backends.GraphQLAuthBackend",
    'django.contrib.auth.backends.ModelBackend',
]

GRAPHQL_JWT = {
    "JWT_ALLOW_ANY_CLASSES": [
        "graphql_auth.mutations.Register",
        "graphql_auth.mutations.PasswordReset",
        "graphql_auth.mutations.ObtainJSONWebToken",
        "graphql_auth.mutations.VerifyToken",
        "graphql_auth.mutations.RefreshToken",
        "graphql_auth.mutations.RevokeToken",
    ],
    "JWT_VERIFY_EXPIRATION": False,
}

GRAPHQL_AUTH = {
    "REGISTER_MUTATION_FIELDS": {
        "email": "String",
        "username": "String",
        "first_name": "String",
        "last_name": "String",
        "is_student": "Boolean",
        "is_teacher": "Boolean",
    },
    "LOGIN_ALLOWED_FIELDS": {"username": "String", "password": "String"},
}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'media/'